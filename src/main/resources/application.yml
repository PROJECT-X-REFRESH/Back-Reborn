spring:
  profiles:
    active: local # local, develop, release

  # OAuth2
  security:
    oauth2:
      client:
        registration: # 클라이언트 식별
          # Google
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          # Naver
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            # redirect-uri: http://{domain_uri}:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Naver
            scope:
              - name
              - email
          # Kakao
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            # redirect-uri: http://{domain_uri}:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
        provider: # 서비스 제공자 식별
          # Naver
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          # Kakao
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  # 파일
  servlet:
    multipart:
      maxFileSize: 30MB # 1개
      maxRequestSize: 100MB # 전체
---
# Swagger
springdoc:
  swagger-ui:
    path: /swagger
  cache:
    disabled: true
  use-fqn: true
---
# DB-JPA Global settig
spring:
  #MySQL
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  #JPA
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000
  # 리프레시 토큰
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
---
# S3
cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}
      path:
        location: location
    credentials:
      accessKey: ${AWS_S3_ACCESS_KEY}
      secretKey: ${AWS_S3_SECRET_KEY}
    region:
      static: ap-northeast-2
    stack:
      auto: false
# JWT
jwt:
  secret: ${JWT_SECRET}
  accessExpirationTime: ${JWT_EXPIRATION}
  refreshExpirationTime: ${JWT_REFRESH_EXPIRATION}

---
naver-cloud-sms:
  accessKey: ${NAVER_SMS_ACESS_KEY}
  secretKey: ${NAVER_SMS_SECRET_KEY}
  serviceId: ${NAVER_SMS_ID}
  senderPhone: ${NAVER_SMS_PHONE}

---
# Local
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}

---
# Develop
spring:
  config:
    activate:
      on-profile: develop
  datasource:
    url: ${AWS_DB_URL}
    username: ${AWS_DB_USERNAME}
    password: ${AWS_DB_PASSWORD}

---
# Release
spring:
  config:
    activate:
      on-profile: release
  datasource:
    url: ${AWS_DB_URL}
    username: ${AWS_DB_USERNAME}
    password: ${AWS_DB_PASSWORD}
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          auto: create
---
spring:
  application:
    name: RE-Born-Back

oauth2:
  redirect-url: http://reborn.site:8080/token/local